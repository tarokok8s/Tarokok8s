apiVersion: v1
kind: Namespace
metadata:
  name: ollama
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ollama
  labels:
    app: ollama
  namespace: ollama
spec:
  selector:
    matchLabels:
      app: ollama # has to match .spec.template.metadata.labels
  serviceName: ollama
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: ollama # has to match .spec.selector.matchLabels
    spec:
      initContainers:
        - name: pull
          image: quay.io/flysangel/ollama/ollama:latest
          command:
            - bash
            - -c
            - |
              ollama serve &
              sleep 5 # wait ollama server
              for model in echo $(echo ${PULL_MODELS} | tr ',' ' '); do
                ollama list | grep -q ${model} || \
                  ollama pull ${model}
              done
          env:
            - name: PULL_MODELS
              value: "llama3.2:1b,nomic-embed-text"
          volumeMounts:
            - name: ollama
              mountPath: /root/.ollama
      containers:
        - name: ollama
          image: quay.io/flysangel/ollama/ollama:latest
          imagePullPolicy: Always # Always, Nerver, IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "2Gi"
          volumeMounts:
            - name: ollama
              mountPath: /root/.ollama
  volumeClaimTemplates:
    - metadata:
        name: ollama
      spec:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  labels:
    app: ollama
  namespace: ollama
spec:
  clusterIP: None
  selector:
    app: ollama
  ports:
    - port: 11434
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  labels:
    app: webui
  namespace: ollama
spec:
  selector:
    matchLabels:
      app: webui # has to match .spec.template.metadata.labels
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: webui # has to match .spec.selector.matchLabels
    spec:
      hostname: webui
      containers:
        - name: dbadm
          image: quay.io/flysangel/open-webui:dbadm-v1.0.0
          imagePullPolicy: Always # Always, Nerver, IfNotPresent
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: ADMIN_MAIL
              value: "admin@tks.com"
            - name: ADMIN_PASSWORD
              value: "admin"
            - name: SQLITE_DB
              value: "/app/backend/data/webui.db"
          volumeMounts:
            - name: webui
              mountPath: /app/backend/data
        - name: webui
          image: ghcr.io/open-webui/open-webui:main
          imagePullPolicy: Always # Always, Nerver, IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "2Gi"
          env:
            - name: ENV
              value: "dev"
            - name: WEBUI_AUTH
              value: "True"
            - name: ENABLE_SIGNUP
              value: "True"
            - name: OLLAMA_BASE_URL
              value: "http://ollama-0.ollama:11434"
            - name: DEFAULT_MODELS
              value: "llama3.2:1b"
            - name: TASK_MODEL
              value: "llama3.2:1b"
            - name: RAG_EMBEDDING_ENGINE
              value: "ollama"
            - name: RAG_EMBEDDING_MODEL
              value: "nomic-embed-text"
            - name: ENABLE_OPENAI_API
              value: "False"
          volumeMounts:
            - name: webui
              mountPath: /app/backend/data
      volumes:
        - name: webui
          persistentVolumeClaim:
            claimName: webui
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: webui
  namespace: ollama
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: webui
  labels:
    app: webui
  namespace: ollama
spec:
  selector:
    app: webui
  ports:
    - port: 3000
      targetPort: 8080
      protocol: TCP
  type: NodePort
#  type: LoadBalancer
#  allocateLoadBalancerNodePorts: false
