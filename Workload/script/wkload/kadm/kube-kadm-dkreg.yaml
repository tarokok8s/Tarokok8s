apiVersion: v1
kind: ServiceAccount
metadata:
  name: kadm
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kadm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kadm
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: kube-kadm
  namespace: kube-system
spec:
  selector:
    app: kadm
  ports:
    - protocol: TCP
      port: 22100
      targetPort: 22100
---
apiVersion: v1
kind: Pod
metadata:
  name: kube-kadm
  namespace: kube-system
  labels:
    app: kadm
spec:
  volumes:
  - name: dkreg-storage
    hostPath:
      path: /opt/dkreg
  - name: podman-storage
    hostPath:
      path: /opt/podman
  - name: kadm-storage
    hostPath:
      path: /opt/kadm
  serviceAccountName: kadm
  containers:
  - name: kadm
    image: quay.io/cloudwalker/alp.kadm
    imagePullPolicy: Always
    ports:
    - containerPort: 22100
      hostPort: 22100
    lifecycle:
      postStart:
        exec:
          command:
            - /bin/bash
            - -c
            - |
              cp -p /var/tmp/htpasswd /opt/dkreg;
              chown bigred:wheel /home/bigred/wulin
    volumeMounts:
    - name: dkreg-storage
      mountPath: /opt/dkreg
    - name: podman-storage
      mountPath: /var/lib/containers/storage
    - name: kadm-storage
      mountPath: /home/bigred/wulin
    env:
    - name: KUBERNETES_SERVICE_HOST
      value: "kubernetes.default"
    - name: KUBERNETES_SERVICE_PORT_HTTPS
      value: "443"
    - name: KUBERNETES_SERVICE_PORT
      value: "443"
    securityContext:
      privileged: true
  - image: registry:2
    name: dkreg
    ports:
    - containerPort: 5000
      hostPort: 5000
    volumeMounts:
    - mountPath: "/var/lib/registry"
      name: dkreg-storage
    env:
    - name: REGISTRY_AUTH
      value: "htpasswd"
    - name: REGISTRY_AUTH_HTPASSWD_PATH
      value: "/var/lib/registry/htpasswd"
    - name: REGISTRY_AUTH_HTPASSWD_REALM
      value: "Registry Realm"
  nodeSelector:
    wk: kadm
 #   node-role.kubernetes.io/control-plane: 
  tolerations:
  - effect: NoSchedule
    operator: Exists
